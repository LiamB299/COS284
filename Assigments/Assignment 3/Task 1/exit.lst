     1                                 %line 1+1 task1.asm
     2                                 [segment .data]
     3 00000000 456E74657220746865-     in1 db "Enter the first number: "
     4 00000000 206669727374206E75-
     5 00000000 6D6265723A20       
     6 00000018 456E74657220746865-     in2 db "Enter the second number: "
     7 00000018 207365636F6E64206E-
     8 00000018 756D6265723A20     
     9                                 
    10                                 [segment .bss]
    11 00000000 <gap>                   num1 resb 3
    12 00000003 <gap>                   num2 resb 3
    13 00000006 <gap>                   ans resb 2
    14                                 
    15                                 [segment .text]
    16                                 [global _start]
    17                                 _start:
    18 00000000 48C7C001000000          mov rax, 1
    19 00000007 48C7C701000000          mov rdi, 1
    20 0000000E 48C7C6[00000000]        mov rsi, in1
    21 00000015 48C7C218000000          mov rdx, 24
    22 0000001C 0F05                    syscall
    23                                 
    24 0000001E 48C7C000000000          mov rax, 0
    25 00000025 48C7C700000000          mov rdi, 0
    26 0000002C 48C7C6[00000000]        mov rsi, num1
    27 00000033 48C7C203000000          mov rdx, 3
    28 0000003A 0F05                    syscall
    29                                 
    30 0000003C 48C7C001000000          mov rax, 1
    31 00000043 48C7C701000000          mov rdi, 1
    32 0000004A 48C7C6[00000000]        mov rsi, in2
    33 00000051 48C7C219000000          mov rdx, 25
    34 00000058 0F05                    syscall
    35                                 
    36 0000005A 48C7C000000000          mov rax, 0
    37 00000061 48C7C700000000          mov rdi, 0
    38 00000068 48C7C6[00000000]        mov rsi, num2
    39 0000006F 48C7C203000000          mov rdx, 3
    40 00000076 0F05                    syscall
    41                                 
    42 00000078 49C7C000000000          mov r8, 0
    43 0000007F 49C7C100000000          mov r9, 0
    44                                 
    45 00000086 8A0425[00000000]        mov al, [num1]
    46 0000008D 2C30                    sub al, 48
    47 0000008F 49C7C00A000000          mov r8, 10
    48 00000096 49F7E0                  mul r8
    49 00000099 4188C0                  mov r8b, al
    50 0000009C 44020425[01000000]      add r8b, byte[num1+1]
    51 000000A4 4180E830                sub r8b, 48
    52                                 
    53 000000A8 8A0425[00000000]        mov al, [num2]
    54 000000AF 2C30                    sub al, 48
    55 000000B1 49C7C10A000000          mov r9, 10
    56 000000B8 49F7E1                  mul r9
    57 000000BB 4188C1                  mov r9b, al
    58 000000BE 44020C25[01000000]      add r9b, byte[num2+1]
    59 000000C6 4180E930                sub r9b, 48
    60                                 
    61 000000CA 4831C0                  xor rax, rax
    62 000000CD 4831D2                  xor rdx, rdx
    63 000000D0 4488C0                  mov al, r8b
    64                                 
    65                                 divide:
    66 000000D3 49F7F1                  div r9
    67 000000D6 4C89C8                  mov rax, r9
    68 000000D9 4989D1                  mov r9, rdx
    69 000000DC 4831D2                  xor rdx, rdx
    70 000000DF 4983F900                cmp r9, 0
    71 000000E3 75EC                    jnz divide
    72                                 
    73                                 
    74 000000E5 49C7C10A000000          mov r9, 10
    75                                 
    76 000000EC 49F7F1                  div r9
    77 000000EF 880425[00000000]        mov [ans], al
    78 000000F6 800425[00000000]30      add byte[ans], 48
    79 000000FE 881425[01000000]        mov [ans+1], dl
    80 00000105 800425[01000000]30      add byte[ans+1], 48
    81                                 
    82 0000010D 48C7C001000000          mov rax, 1
    83 00000114 48C7C701000000          mov rdi, 1
    84 0000011B 48C7C6[00000000]        mov rsi, ans
    85 00000122 48C7C202000000          mov rdx, 2
    86 00000129 0F05                    syscall
    87                                 
    88 0000012B 48C7C03C000000          mov rax, 60
    89 00000132 48C7C700000000          mov rdi, 0
    90 00000139 0F05                    syscall
